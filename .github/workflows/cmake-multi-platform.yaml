# SPDX-FileCopyrightText: 2025 Helmholtz-Zentrum hereon GmbH
# SPDX-License-Identifier: CC0-1.0
# SPDX-FileContributor: Carsten Lemmen <carsten.lemmen@hereon.de>
#
# This starter workflow is for a CMake project running on multiple platforms. There is a different starter workflow if you just want a single platform.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-single-platform.yml
name: CMake on multiple platforms

on:
  push:
    branches: ["gmp"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: false

      # Set up a matrix to run the following 3 configurations:
      # 1. <Windows, Release, latest MSVC compiler toolchain on the default runner image, default generator>
      # 2. <Linux, Release, latest GCC compiler toolchain on the default runner image, default generator>
      # 3. <Linux, Release, latest Clang compiler toolchain on the default runner image, default generator>
      #
      # To add more build types (Release, Debug, RelWithDebInfo, etc.) customize the build_type list.
      matrix:
        os: [ubuntu-latest]
        c_compiler: [gcc, clang]
        f_compiler: [gfortran]
        # exclude:
        #  - c_compiler: gcc
        #    f_compiler: flang

    steps:
      - name: Checkout GOTM repository
        run: |
          GOTMDIR=$(mktemp -d)
          git clone --depth=1 --branch=v6.0.7 --recurse-submodules https://github.com/gotm-model/code.git "$GOTMDIR"
          echo "GOTMDIR=$GOTMDIR" >> $GITHUB_ENV

      - name: Checkout OxyPOM repository
        uses: actions/checkout@v4

      - name: Set reusable strings
        # Turn repeated input strings (such as the build output directory) into step outputs. These step outputs can be used throughout the workflow file.
        id: strings
        shell: bash
        run: |
          echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

      - name: Install gfortran on macOS
        if: matrix.os == 'XXXX' && matrix.f_compiler == 'gfortran' || matrix.os == 'macos-latest' && matrix.c_compiler == 'gcc'
        run: |
          brew install gcc
          echo "Using Homebrew-installed gfortran:"
          gfortran --version

      - name: Print compiler versions
        run: |
          ${{ matrix.c_compiler }} --version
          ${{ matrix.f_compiler }} --version

      - name: CMake
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        run: >
          cmake -S ${GOTMDIR} -B ${{ steps.strings.outputs.build-output-dir }}
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
          -DCMAKE_Fortran_COMPILER=${{ matrix.f_compiler }}
          -DGOTM_USE_NetCDF=OFF
          -DGOTM_USE_FABM=ON -DFABM_USE_IEEE_ARITHMETIC=OFF
          -DFABM_OXYPOM_BASE=/home/runner/work/fabm-oxypom/fabm-oxypom/src -DFABM_INSTITUTES="gotm;oxypom"

      - name: Make
        run: make -C ${{ steps.strings.outputs.build-output-dir }}
