# Multistage Dockerfile for development on Alpine linux with gfortran
#
# SPDX-FileContributor: Carsten Lemmen <carsten.lemmen@hereon.de>
# SPDX-FileCopyrightText: 2024-2025 Helmholtz-Zentrum hereon GmbH
# SPDX-License-Identifier: CC0-1.0
#
# Download base image alpine
FROM python:3.11-alpine AS base

LABEL maintainer="carsten.lemmen@hereon.de"
LABEL version="0.1a"
LABEL description="This is a custom Docker image for a development container"
LABEL license="CC0-1.0"
LABEL copyright="2024-2025 Helmholtz-Zentrum hereon GmbH"

# Install a development toolchain based on gnu/openmpi, git and  build tools
RUN apk add --no-cache cmake make bash 
RUN apk add --no-cache gcc
RUN apk add --no-cache gfortran
RUN apk add --no-cache g++
RUN apk add --no-cache netcdf-dev netcdf-fortran-dev
RUN apk add --no-cache git

RUN pip install editscenario
RUN pip install matplotlib
RUN pip install gotmgui
CMD ["/bin/bash"]

FROM base AS gotm

ENV GOTMDIR=/home/gotm
RUN git clone --depth=1 --branch=v6.0.7 --recurse-submodules https://github.com/gotm-model/code.git $GOTMDIR
RUN mkdir -p $GOTMDIR/build
RUN mkdir -p /opt
RUN cmake -B $GOTMDIR/build -S $GOTMDIR -DCMAKE_INSTALL_PREFIX=/opt -DGOTM_USE_FABM=OFF
RUN make -C $GOTMDIR/build
RUN make -C $GOTMDIR/build install
CMD ["/bin/bash"]

# Due to missing implementation of the ieee_arithmetic fortran module on alpine/aarch64,
# we supply the flag -DFABM_USE_IEEE_ARITHMETIC=OFF
FROM gotm AS gotm-fabm
ENV GOTM_BASE=$GOTMDIR
RUN cmake -B $GOTMDIR/build -S $GOTMDIR -DCMAKE_INSTALL_PREFIX=/opt -DGOTM_USE_FABM=ON -DFABM_USE_IEEE_ARITHMETIC=OFF
RUN make -C $GOTMDIR/build
RUN make -C $GOTMDIR/build install
CMD ["/bin/bash"]

FROM gotm-fabm AS fabm
ENV oxypom_BASE=/home/dobgcp
RUN git clone --depth=1 --recurse-submodules https://codebase.helmholtz.cloud/dam-elbextreme/oxypom.git ${DOBGCP_BASE}
RUN cmake -B $GOTMDIR/build -S $GOTMDIR -DCMAKE_INSTALL_PREFIX=/opt -DGOTM_USE_FABM=ON -DFABM_USE_IEEE_ARITHMETIC=OFF -DFABM_DOBGCP_BASE=${DOBGCP_BASE}/src -DFABM_INSTITUTES=dobgcp
RUN make -C $GOTMDIR/build
RUN make -C $GOTMDIR/build install
CMD ["/bin/bash"]

FROM alpine:edge AS runtime
COPY --from=gotm /opt /opt

LABEL maintainer="carsten.lemmen@hereon.de"
LABEL version="0.1a"
LABEL description="This is a custom Docker image for a deployment container"
LABEL license="CC0-1.0"
LABEL copyright="2024-2025 Helmholtz-Zentrum hereon GmbH"

# Install a development toolchain based on gnu, git and netcdf dev tools
#RUN apk add --no-cache \
RUN apk add git shadow openssh wget sed bash
RUN apk add make cmake
RUN apk add netcdf netcdf-fortran netcdf-dev netcdf-fortran-dev netcdf-utils
RUN apk add R R-dev

RUN R -e 'install.packages("ncdf4", "/usr/lib/R/library", repos="https://cran.uni-muenster.de/")'

ENV PATH=${PATH}:/opt/bin
ENV LD_LIBRARY_PATH=${PATH}:/opt/lib

RUN groupadd -g 1009 model
RUN useradd -d /home -s /bin/bash -m model -u 1009 -g 1009
RUN chown -R model:model /home
USER model
ENV HOME=/home
WORKDIR ${HOME}
COPY ./testcases/* ${HOME}
RUN bash ./get_data.sh
RUN Rscript setup_data.R
RUN gotm
# RUN RScript plot_output.R
# b325f4a25932:~# Rscript plot_output.R
# Loading required package: ncdf4
# [1] "vobjtovarid4: error #F: I could not find the requsted var (or dimvar) in the file!"
# [1] "var (or dimvar) name: oxypom_DOxy"
# [1] "file name: output.nc"
# Error in vobjtovarid4(nc, varid, verbose = verbose, allowdimvar = TRUE) :
#   Variable not found
# Calls: t -> ncvar_get -> vobjtovarid4
# Execution halted

CMD ["/bin/bash"]